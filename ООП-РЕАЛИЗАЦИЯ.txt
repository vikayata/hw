ООП-РЕАЛИЗАЦИЯ

Конфигурационный файл представляет собой строки, состоящие из имени параметра и его аргументов.

Различия в обработке различных конфигурационных файлов - различия в правилах считывания и записи строк.

Опишем класс "конфигурационный файл", который имеет свойства "формат", "строки", "правило считывания", "правило записи".

class ConfigFile(object):
    format = ''
    params = [ParamsItem, ParamsItem, ...]
    readrule = ''
    writerule = ''

Класс "параметр" имеет свойства "наименование параметра" и "аргументы".
    
class ParamsItem(object):
    name = ''
    args = [*args, **kwargs]

ConfigFile имеет общие для всех типов методы считывания из файла и записи в файл - построчно.

Считывание происходит через создание экземпляров ParamsItem. В конструкторе этого класса будет определено правило считывания строки из файла. Он будет получать это правило из свойства объекта класса ConfigFile, который инициирует создание ParamsItem. Т.е. __init__() получает в качестве аргумента ConfigFile.readrule.

Также ParamsItem будет иметь метод "развертки" в строку - например, через определенный ''.format(), который он будет также получать в качестве аргумента от объекта ConfigFile. 

При добавлении нового формата конфигурационных файлов к коду мы создаем дочерний класс класса ConfigFile. Он получает уникальные свойства readrule и writerule.

